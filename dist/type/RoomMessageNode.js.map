{"version":3,"file":"RoomMessageNode.js","sourceRoot":"","sources":["../../src/type/RoomMessageNode.ts"],"names":[],"mappings":"AA2BA,MAAM,CAAC,MAAM,sBAAsB,GAA0B;IAC3D,KAAK,EAAE,QAAQ;CAChB,CAAC","sourcesContent":["import type { ObjectStore } from \"@mjt-services/data-common-2025\";\n\nexport type RoomContent = {\n  creatorId: string;\n\n  // --- Content ---\n  // The type of content stored in this node.\n  contentType: \"text\";\n\n  // For finalized text messages, the complete Markdown string.\n  content: string;\n};\n\nexport type RoomNode = RoomContent & {\n  // --- Identity & Metadata ---\n  id: string; // Globally unique identifier.\n  roomId: string; // The room this message belongs to.\n  parentId?: string; // The parent node's id (undefined for the root node).\n  createdAt: number; // Timestamp (ms) when created.\n  updatedAt?: number; // Updated when content changes (e.g. streaming updates).\n  removed?: boolean; // Flag to indicate if the message was retracted.\n\n  // --- Conversation Structure ---\n  // Alternative candidate branches for this node.\n  alternatives?: RoomNode[];\n};\n\nexport const ROOM_NODE_OBJECT_STORE: ObjectStore<RoomNode> = {\n  store: \"daimon\",\n};\n"]}