{"version":3,"file":"ConversationMessageNode.js","sourceRoot":"","sources":["../../src/type/ConversationMessageNode.ts"],"names":[],"mappings":"","sourcesContent":["export type ConversationGroup = {\n  id: string;\n  members: string[];\n};\n\nexport type ConversationChannel = {\n  id: string;\n  groupId: string;\n  topic: string; // short name for the channel\n  description?: string; // long description for the channel\n  createdAt: number;\n};\n\nexport type ConversationMessageNode = {\n  // --- Identity & Metadata ---\n  id: string; // Globally unique identifier.\n  parentId?: string; // The parent node's id (undefined for the root node).\n  groupId: string;\n  channelId: string;\n  conversationId: string; // Identifier for the conversation.\n  speakerId: string; // The identifier of the speaker.\n  role: \"user\" | \"assistant\" | \"system\"; // The role of the speaker.\n  createdAt: number; // Timestamp (ms) when created.\n  updatedAt?: number; // Updated when content changes (e.g. streaming updates).\n  removed?: boolean; // Flag to indicate if the message was retracted.\n\n  // --- Content ---\n  // The type of content stored in this node.\n  contentType: \"text\" | \"streaming\" | \"summary\";\n\n  // For finalized text messages, the complete Markdown string.\n  content?: string;\n\n  // --- Conversation Structure ---\n  // Alternative candidate branches for this node.\n  alternatives?: ConversationMessageNode[];\n};\n"]}