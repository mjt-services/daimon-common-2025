{"version":3,"file":"findRoomChildren.js","sourceRoot":"","sources":["../../src/daimon/findRoomChildren.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAA0B,MAAM,gCAAgC,CAAC;AAC/E,OAAO,EAAE,iBAAiB,EAAa,MAAM,cAAc,CAAC;AAG5D,MAAM,CAAC,MAAM,gBAAgB,GAC3B,CAA8B,GAAiC,EAAE,EAAE,CACnE,KAAK,EAAE,MAAc,EAAE,EAAE;IACvB,OAAO,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI,EAAE,iBAAiB;QACvB,KAAK,EAAE,yBAAyB,MAAM,IAAI;KAC3C,CAAoB,CAAC;AACxB,CAAC,CAAC","sourcesContent":["import { Datas, type DataConnectionMap } from \"@mjt-services/data-common-2025\";\nimport { ROOM_OBJECT_STORE, type Room } from \"../type/Room\";\nimport type { MessageConnectionInstance } from \"@mjt-engine/message/dist/createConnection\";\n\nexport const findRoomChildren =\n  <M extends DataConnectionMap>(con: MessageConnectionInstance<M>) =>\n  async (roomId: string) => {\n    return Datas.search(con)({\n      from: ROOM_OBJECT_STORE,\n      query: `values(@)[?parentId=='${roomId}']`,\n    }) as Promise<Room[]>;\n  };\n"]}