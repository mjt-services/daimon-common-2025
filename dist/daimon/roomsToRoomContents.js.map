{"version":3,"file":"roomsToRoomContents.js","sourceRoot":"","sources":["../../src/daimon/roomsToRoomContents.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAA0B,MAAM,gCAAgC,CAAC;AAE/E,OAAO,EAAgB,oBAAoB,EAAE,MAAM,iBAAiB,CAAC;AAIrE,MAAM,CAAC,MAAM,mBAAmB,GAC9B,CAA8B,GAAiC,EAAE,EAAE,CACnE,CAAC,KAAa,EAA0B,EAAE;IACxC,OAAO,OAAO,CAAC,GAAG,CAChB,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;QACvB,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAU;YAC5C,WAAW,EAAE,oBAAoB;YACjC,GAAG,EAAE,IAAI,CAAC,SAAS;SACpB,CAAC,CAAC;QACH,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;IAC3B,CAAC,CAAC,CACH,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { Datas, type DataConnectionMap } from \"@mjt-services/data-common-2025\";\nimport type { RoomContent } from \"../type/RoomContent\";\nimport { type Content, CONTENT_OBJECT_STORE } from \"../type/Content\";\nimport type { Room } from \"../type/Room\";\nimport type { MessageConnectionInstance } from \"@mjt-engine/message/dist/createConnection\";\n\nexport const roomsToRoomContents =\n  <M extends DataConnectionMap>(con: MessageConnectionInstance<M>) =>\n  (rooms: Room[]): Promise<RoomContent[]> => {\n    return Promise.all(\n      rooms.map(async (room) => {\n        const content = await Datas.get(con)<Content>({\n          objectStore: CONTENT_OBJECT_STORE,\n          key: room.contentId,\n        });\n        return { room, content };\n      })\n    );\n  };\n"]}