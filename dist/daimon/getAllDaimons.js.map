{"version":3,"file":"getAllDaimons.js","sourceRoot":"","sources":["../../src/daimon/getAllDaimons.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,KAAK,EAA0B,MAAM,gCAAgC,CAAC;AAC/E,OAAO,EAAE,mBAAmB,EAAe,MAAM,gBAAgB,CAAC;AAElE,MAAM,CAAC,MAAM,aAAa,GACxB,CAA8B,GAAiC,EAAE,EAAE,CACnE,KAAK,IAAI,EAAE;IACT,OAAO,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI,EAAE,mBAAmB;QACzB,KAAK,EAAE,WAAW;KACnB,CAAsB,CAAC;AAC1B,CAAC,CAAC","sourcesContent":["import type { MessageConnectionInstance } from \"@mjt-engine/message/dist/createConnection\";\nimport { Datas, type DataConnectionMap } from \"@mjt-services/data-common-2025\";\nimport { DAIMON_OBJECT_STORE, type Daimon } from \"../type/Daimon\";\n\nexport const getAllDaimons =\n  <M extends DataConnectionMap>(con: MessageConnectionInstance<M>) =>\n  async () => {\n    return Datas.search(con)({\n      from: DAIMON_OBJECT_STORE,\n      query: \"values(@)\",\n    }) as Promise<Daimon[]>;\n  };\n"]}