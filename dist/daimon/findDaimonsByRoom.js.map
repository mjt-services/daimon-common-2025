{"version":3,"file":"findDaimonsByRoom.js","sourceRoot":"","sources":["../../src/daimon/findDaimonsByRoom.ts"],"names":[],"mappings":"AACA,OAAO,EACL,KAAK,EACL,iBAAiB,GAElB,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAAE,mBAAmB,EAAe,MAAM,gBAAgB,CAAC;AAElE,MAAM,CAAC,MAAM,iBAAiB,GAC5B,CAA8B,GAAiC,EAAE,EAAE,CACnE,KAAK,EAAE,MAAc,EAAqB,EAAE;IAC1C,MAAM,GAAG,GAAG,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,EAAE,iBAAiB;QACvB,KAAK,EAAE,yBAAyB,MAAM,kBAAkB;KACzD,CAAC,CAAa,CAAC;IAEhB,MAAM,KAAK,GAAG,yBAAyB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;IAEjE,MAAM,OAAO,GAAG,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,EAAE,mBAAmB;QACzB,KAAK;KACN,CAAC,CAAa,CAAC;IAChB,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC","sourcesContent":["import type { MessageConnectionInstance } from \"@mjt-engine/message/dist/createConnection\";\nimport {\n  Datas,\n  LINK_OBJECT_STORE,\n  type DataConnectionMap,\n} from \"@mjt-services/data-common-2025\";\nimport { DAIMON_OBJECT_STORE, type Daimon } from \"../type/Daimon\";\n\nexport const findDaimonsByRoom =\n  <M extends DataConnectionMap>(con: MessageConnectionInstance<M>) =>\n  async (roomId: string): Promise<Daimon[]> => {\n    const ids = (await Datas.search(con)({\n      from: LINK_OBJECT_STORE,\n      query: `values(@)[?roomId == '${roomId}'].daimonId | []`,\n    })) as string[];\n\n    const query = `values(@)[?contains(['${ids.join(\"','\")}'], id)]`;\n\n    const daimons = (await Datas.search(con)({\n      from: DAIMON_OBJECT_STORE,\n      query,\n    })) as Daimon[];\n    return daimons;\n  };\n\n\n"]}